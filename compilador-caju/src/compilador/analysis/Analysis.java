/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.analysis;

import compilador.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAPrograma(APrograma node);
    void caseADecVariavel(ADecVariavel node);
    void caseAListaNomes(AListaNomes node);
    void caseAMultiplosIds(AMultiplosIds node);
    void caseABaseTipo(ABaseTipo node);
    void caseAVetorTipo(AVetorTipo node);
    void caseAExpEntreColchetes(AExpEntreColchetes node);
    void caseANumeroTipoBase(ANumeroTipoBase node);
    void caseACaractereTipoBase(ACaractereTipoBase node);
    void caseABooleanoTipoBase(ABooleanoTipoBase node);
    void caseADecFuncao(ADecFuncao node);
    void caseANaoVazioTipoRetorno(ANaoVazioTipoRetorno node);
    void caseAVazioTipoRetorno(AVazioTipoRetorno node);
    void caseAParametro(AParametro node);
    void caseAParamParametros(AParamParametros node);
    void caseAEmpityParametros(AEmpityParametros node);
    void caseAMultiplosParametros(AMultiplosParametros node);
    void caseABloco(ABloco node);
    void caseAAtrib(AAtrib node);
    void caseAListaAtrib(AListaAtrib node);
    void caseAMultiplosAtributos(AMultiplosAtributos node);
    void caseACasadoComando(ACasadoComando node);
    void caseANaoCasadoComando(ANaoCasadoComando node);
    void caseAComandoSimplesComando(AComandoSimplesComando node);
    void caseASeSenaoCasadoCasado(ASeSenaoCasadoCasado node);
    void caseASeNaoCasadoNaoCasado(ASeNaoCasadoNaoCasado node);
    void caseASeSenaoNaoCasadoNaoCasado(ASeSenaoNaoCasadoNaoCasado node);
    void caseAEnquantoComandoSimples(AEnquantoComandoSimples node);
    void caseAParaComandoSimples(AParaComandoSimples node);
    void caseAParaCadaComandoSimples(AParaCadaComandoSimples node);
    void caseAAtribuicaoComandoSimples(AAtribuicaoComandoSimples node);
    void caseARetorneComandoSimples(ARetorneComandoSimples node);
    void caseABlocoComandoSimples(ABlocoComandoSimples node);
    void caseAChamadaComandoSimples(AChamadaComandoSimples node);
    void caseAIdentificadorVar(AIdentificadorVar node);
    void caseAVariavelVar(AVariavelVar node);
    void caseAEExpressaoLogica(AEExpressaoLogica node);
    void caseAOuExpressaoLogica(AOuExpressaoLogica node);
    void caseANaoExpressaoLogica(ANaoExpressaoLogica node);
    void caseATermoExpressaoLogica(ATermoExpressaoLogica node);
    void caseAParenteseLogicaTermoLogico(AParenteseLogicaTermoLogico node);
    void caseARelacionalTermoLogico(ARelacionalTermoLogico node);
    void caseAIgualExpressaoRelacional(AIgualExpressaoRelacional node);
    void caseAMaiorExpressaoRelacional(AMaiorExpressaoRelacional node);
    void caseAMenorExpressaoRelacional(AMenorExpressaoRelacional node);
    void caseAMaiorIgualExpressaoRelacional(AMaiorIgualExpressaoRelacional node);
    void caseAMenorIgualExpressaoRelacional(AMenorIgualExpressaoRelacional node);
    void caseASomaExpressaoAritmetica(ASomaExpressaoAritmetica node);
    void caseASubtracaoExpressaoAritmetica(ASubtracaoExpressaoAritmetica node);
    void caseATermoExpressaoAritmetica(ATermoExpressaoAritmetica node);
    void caseAMultiplicacaoTermoAritmetico(AMultiplicacaoTermoAritmetico node);
    void caseADivisaoTermoAritmetico(ADivisaoTermoAritmetico node);
    void caseAFatorTermoAritmetico(AFatorTermoAritmetico node);
    void caseAParenteseAritmeticaFatorAritmetico(AParenteseAritmeticaFatorAritmetico node);
    void caseAVariavelFatorAritmetico(AVariavelFatorAritmetico node);
    void caseANumeroFatorAritmetico(ANumeroFatorAritmetico node);
    void caseABooleanoFatorAritmetico(ABooleanoFatorAritmetico node);
    void caseAChamadaFatorAritmetico(AChamadaFatorAritmetico node);
    void caseACaractereFatorAritmetico(ACaractereFatorAritmetico node);
    void caseATextoFatorAritmetico(ATextoFatorAritmetico node);
    void caseAExpAritmeticaExp(AExpAritmeticaExp node);
    void caseAExpLogicaExp(AExpLogicaExp node);
    void caseAChamada(AChamada node);
    void caseAListaExpListaExp(AListaExpListaExp node);
    void caseAEmpityListaExp(AEmpityListaExp node);
    void caseAMultiplosExp(AMultiplosExp node);

    void caseTVacuo(TVacuo node);
    void caseTComentario(TComentario node);
    void caseTInicioExecucao(TInicioExecucao node);
    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTTipoCaractere(TTipoCaractere node);
    void caseTTipoNumero(TTipoNumero node);
    void caseTTipoBooleano(TTipoBooleano node);
    void caseTTipoVetor(TTipoVetor node);
    void caseTTipoVazio(TTipoVazio node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTPara(TPara node);
    void caseTParaCada(TParaCada node);
    void caseTEnquanto(TEnquanto node);
    void caseTRetorne(TRetorne node);
    void caseTPonto(TPonto node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTVirgula(TVirgula node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTBarraReta(TBarraReta node);
    void caseTAbreParentese(TAbreParentese node);
    void caseTFechaParentese(TFechaParentese node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTDivisao(TDivisao node);
    void caseTMultiplicacao(TMultiplicacao node);
    void caseTMod(TMod node);
    void caseTIgual(TIgual node);
    void caseTMaior(TMaior node);
    void caseTMenor(TMenor node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTNao(TNao node);
    void caseTCaractere(TCaractere node);
    void caseTTexto(TTexto node);
    void caseTNumero(TNumero node);
    void caseTBooleano(TBooleano node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
