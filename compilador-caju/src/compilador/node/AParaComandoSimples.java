/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AParaComandoSimples extends PComandoSimples
{
    private TPara _para_;
    private TAbreParentese _abreParentese_;
    private PListaAtrib _declaracao_;
    private TPontoVirgula _a_;
    private PExp _condicao_;
    private TPontoVirgula _b_;
    private PListaAtrib _interacao_;
    private TFechaParentese _fechaParentese_;
    private PComando _comando_;

    public AParaComandoSimples()
    {
        // Constructor
    }

    public AParaComandoSimples(
        @SuppressWarnings("hiding") TPara _para_,
        @SuppressWarnings("hiding") TAbreParentese _abreParentese_,
        @SuppressWarnings("hiding") PListaAtrib _declaracao_,
        @SuppressWarnings("hiding") TPontoVirgula _a_,
        @SuppressWarnings("hiding") PExp _condicao_,
        @SuppressWarnings("hiding") TPontoVirgula _b_,
        @SuppressWarnings("hiding") PListaAtrib _interacao_,
        @SuppressWarnings("hiding") TFechaParentese _fechaParentese_,
        @SuppressWarnings("hiding") PComando _comando_)
    {
        // Constructor
        setPara(_para_);

        setAbreParentese(_abreParentese_);

        setDeclaracao(_declaracao_);

        setA(_a_);

        setCondicao(_condicao_);

        setB(_b_);

        setInteracao(_interacao_);

        setFechaParentese(_fechaParentese_);

        setComando(_comando_);

    }

    @Override
    public Object clone()
    {
        return new AParaComandoSimples(
            cloneNode(this._para_),
            cloneNode(this._abreParentese_),
            cloneNode(this._declaracao_),
            cloneNode(this._a_),
            cloneNode(this._condicao_),
            cloneNode(this._b_),
            cloneNode(this._interacao_),
            cloneNode(this._fechaParentese_),
            cloneNode(this._comando_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParaComandoSimples(this);
    }

    public TPara getPara()
    {
        return this._para_;
    }

    public void setPara(TPara node)
    {
        if(this._para_ != null)
        {
            this._para_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._para_ = node;
    }

    public TAbreParentese getAbreParentese()
    {
        return this._abreParentese_;
    }

    public void setAbreParentese(TAbreParentese node)
    {
        if(this._abreParentese_ != null)
        {
            this._abreParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParentese_ = node;
    }

    public PListaAtrib getDeclaracao()
    {
        return this._declaracao_;
    }

    public void setDeclaracao(PListaAtrib node)
    {
        if(this._declaracao_ != null)
        {
            this._declaracao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declaracao_ = node;
    }

    public TPontoVirgula getA()
    {
        return this._a_;
    }

    public void setA(TPontoVirgula node)
    {
        if(this._a_ != null)
        {
            this._a_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._a_ = node;
    }

    public PExp getCondicao()
    {
        return this._condicao_;
    }

    public void setCondicao(PExp node)
    {
        if(this._condicao_ != null)
        {
            this._condicao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._condicao_ = node;
    }

    public TPontoVirgula getB()
    {
        return this._b_;
    }

    public void setB(TPontoVirgula node)
    {
        if(this._b_ != null)
        {
            this._b_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._b_ = node;
    }

    public PListaAtrib getInteracao()
    {
        return this._interacao_;
    }

    public void setInteracao(PListaAtrib node)
    {
        if(this._interacao_ != null)
        {
            this._interacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._interacao_ = node;
    }

    public TFechaParentese getFechaParentese()
    {
        return this._fechaParentese_;
    }

    public void setFechaParentese(TFechaParentese node)
    {
        if(this._fechaParentese_ != null)
        {
            this._fechaParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentese_ = node;
    }

    public PComando getComando()
    {
        return this._comando_;
    }

    public void setComando(PComando node)
    {
        if(this._comando_ != null)
        {
            this._comando_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comando_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._para_)
            + toString(this._abreParentese_)
            + toString(this._declaracao_)
            + toString(this._a_)
            + toString(this._condicao_)
            + toString(this._b_)
            + toString(this._interacao_)
            + toString(this._fechaParentese_)
            + toString(this._comando_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._para_ == child)
        {
            this._para_ = null;
            return;
        }

        if(this._abreParentese_ == child)
        {
            this._abreParentese_ = null;
            return;
        }

        if(this._declaracao_ == child)
        {
            this._declaracao_ = null;
            return;
        }

        if(this._a_ == child)
        {
            this._a_ = null;
            return;
        }

        if(this._condicao_ == child)
        {
            this._condicao_ = null;
            return;
        }

        if(this._b_ == child)
        {
            this._b_ = null;
            return;
        }

        if(this._interacao_ == child)
        {
            this._interacao_ = null;
            return;
        }

        if(this._fechaParentese_ == child)
        {
            this._fechaParentese_ = null;
            return;
        }

        if(this._comando_ == child)
        {
            this._comando_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._para_ == oldChild)
        {
            setPara((TPara) newChild);
            return;
        }

        if(this._abreParentese_ == oldChild)
        {
            setAbreParentese((TAbreParentese) newChild);
            return;
        }

        if(this._declaracao_ == oldChild)
        {
            setDeclaracao((PListaAtrib) newChild);
            return;
        }

        if(this._a_ == oldChild)
        {
            setA((TPontoVirgula) newChild);
            return;
        }

        if(this._condicao_ == oldChild)
        {
            setCondicao((PExp) newChild);
            return;
        }

        if(this._b_ == oldChild)
        {
            setB((TPontoVirgula) newChild);
            return;
        }

        if(this._interacao_ == oldChild)
        {
            setInteracao((PListaAtrib) newChild);
            return;
        }

        if(this._fechaParentese_ == oldChild)
        {
            setFechaParentese((TFechaParentese) newChild);
            return;
        }

        if(this._comando_ == oldChild)
        {
            setComando((PComando) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
