/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.analysis;

import compilador.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAInicioPrograma(AInicioPrograma node);
    void caseADeclDecVariavel(ADeclDecVariavel node);
    void caseAIdListaNomes(AIdListaNomes node);
    void caseAIdmaisListaNomes(AIdmaisListaNomes node);
    void caseABaseTipo(ABaseTipo node);
    void caseAVetorTipo(AVetorTipo node);
    void caseAExprTipo(AExprTipo node);
    void caseAExprmaisTipo(AExprmaisTipo node);
    void caseACominicioDecFuncao(ACominicioDecFuncao node);
    void caseASeminicioDecFuncao(ASeminicioDecFuncao node);
    void caseAVazioParametros(AVazioParametros node);
    void caseAParamParametros(AParamParametros node);
    void caseAParamaisParametros(AParamaisParametros node);
    void caseAParametParametro(AParametParametro node);
    void caseABlocoBloco(ABlocoBloco node);
    void caseAVarDecVarMais(AVarDecVarMais node);
    void caseAVarmaisDecVarMais(AVarmaisDecVarMais node);
    void caseAFunDecFunMais(AFunDecFunMais node);
    void caseAFunmaisDecFunMais(AFunmaisDecFunMais node);
    void caseAComandoComMais(AComandoComMais node);
    void caseAComandomaisComMais(AComandomaisComMais node);
    void caseAAtribAtrib(AAtribAtrib node);
    void caseAListaatribListaAtrib(AListaatribListaAtrib node);
    void caseAListaatribmaisListaAtrib(AListaatribmaisListaAtrib node);
    void caseAIfcomelseComando(AIfcomelseComando node);
    void caseAIfsemelseComando(AIfsemelseComando node);
    void caseAEnquantoComando(AEnquantoComando node);
    void caseAParaComando(AParaComando node);
    void caseAParacadaComando(AParacadaComando node);
    void caseAComandoatribComando(AComandoatribComando node);
    void caseARetorneComando(ARetorneComando node);
    void caseABlocoComando(ABlocoComando node);
    void caseAChamadaComando(AChamadaComando node);
    void caseAEnquantoOutro(AEnquantoOutro node);
    void caseAParaOutro(AParaOutro node);
    void caseAParacadaOutro(AParacadaOutro node);
    void caseAComandoatribOutro(AComandoatribOutro node);
    void caseARetorneOutro(ARetorneOutro node);
    void caseABlocoOutro(ABlocoOutro node);
    void caseAChamadaOutro(AChamadaOutro node);
    void caseAIfelseDecCasam(AIfelseDecCasam node);
    void caseAOutraDecCasam(AOutraDecCasam node);
    void caseAIfDecSemCasam(AIfDecSemCasam node);
    void caseAIfcontDecSemCasam(AIfcontDecSemCasam node);
    void caseAFatorExpr(AFatorExpr node);
    void caseASomaExpr(ASomaExpr node);
    void caseAMenosExpr(AMenosExpr node);
    void caseARelacionalFator(ARelacionalFator node);
    void caseAMultiFator(AMultiFator node);
    void caseADivFator(ADivFator node);
    void caseAModFator(AModFator node);
    void caseALogicaExprRelacional(ALogicaExprRelacional node);
    void caseAComparacaoExprRelacional(AComparacaoExprRelacional node);
    void caseATermoExprLogica(ATermoExprLogica node);
    void caseALogicaExprLogica(ALogicaExprLogica node);
    void caseANeglogicaExprLogica(ANeglogicaExprLogica node);
    void caseACaractereTermo(ACaractereTermo node);
    void caseANumeroTermo(ANumeroTermo node);
    void caseABooleanoTermo(ABooleanoTermo node);
    void caseAVarTermo(AVarTermo node);
    void caseAChamadaTermo(AChamadaTermo node);
    void caseAParTermo(AParTermo node);
    void caseAIdVar(AIdVar node);
    void caseAVetorVar(AVetorVar node);
    void caseAFuncaoChamada(AFuncaoChamada node);
    void caseAVazioListaExpr(AVazioListaExpr node);
    void caseAExpressaoListaExpr(AExpressaoListaExpr node);
    void caseAExpressaomaisListaExpr(AExpressaomaisListaExpr node);
    void caseARetornevazioAuxRetorne(ARetornevazioAuxRetorne node);
    void caseARetorneexpAuxRetorne(ARetorneexpAuxRetorne node);
    void caseAMenorqueOpComp(AMenorqueOpComp node);
    void caseAMaiorqueOpComp(AMaiorqueOpComp node);
    void caseAMaiorigualOpComp(AMaiorigualOpComp node);
    void caseAMenorigualOpComp(AMenorigualOpComp node);
    void caseAIgualdadeOpComp(AIgualdadeOpComp node);
    void caseAOuOpLogica(AOuOpLogica node);
    void caseAEOpLogica(AEOpLogica node);
    void caseATipovazioTipoRetorno(ATipovazioTipoRetorno node);
    void caseATipobaseTipoRetorno(ATipobaseTipoRetorno node);
    void caseAAuxatribAuxListaAtrib(AAuxatribAuxListaAtrib node);
    void caseAAuxidAuxId(AAuxidAuxId node);
    void caseATiponumeroTipoBase(ATiponumeroTipoBase node);
    void caseATipocaractereTipoBase(ATipocaractereTipoBase node);
    void caseATipobooleanoTipoBase(ATipobooleanoTipoBase node);

    void caseTVacuo(TVacuo node);
    void caseTComentario(TComentario node);
    void caseTInicioExecucao(TInicioExecucao node);
    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTTipoCaractere(TTipoCaractere node);
    void caseTTipoNumero(TTipoNumero node);
    void caseTTipoBooleano(TTipoBooleano node);
    void caseTTipoVetor(TTipoVetor node);
    void caseTTipoVazio(TTipoVazio node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTPara(TPara node);
    void caseTParaCada(TParaCada node);
    void caseTEnquanto(TEnquanto node);
    void caseTRetorne(TRetorne node);
    void caseTPonto(TPonto node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTVirgula(TVirgula node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTBarraReta(TBarraReta node);
    void caseTAbreParentese(TAbreParentese node);
    void caseTFechaParentese(TFechaParentese node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTDivisao(TDivisao node);
    void caseTMultiplicacao(TMultiplicacao node);
    void caseTMod(TMod node);
    void caseTIgual(TIgual node);
    void caseTMaior(TMaior node);
    void caseTMenor(TMenor node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTNao(TNao node);
    void caseTLer(TLer node);
    void caseTExibir(TExibir node);
    void caseTCaractere(TCaractere node);
    void caseTTexto(TTexto node);
    void caseTNumero(TNumero node);
    void caseTBooleano(TBooleano node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
