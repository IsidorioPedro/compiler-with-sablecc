/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AFunmaisDecFunMais extends PDecFunMais
{
    private PDecFuncao _decFuncao_;
    private PDecFunMais _decFunMais_;

    public AFunmaisDecFunMais()
    {
        // Constructor
    }

    public AFunmaisDecFunMais(
        @SuppressWarnings("hiding") PDecFuncao _decFuncao_,
        @SuppressWarnings("hiding") PDecFunMais _decFunMais_)
    {
        // Constructor
        setDecFuncao(_decFuncao_);

        setDecFunMais(_decFunMais_);

    }

    @Override
    public Object clone()
    {
        return new AFunmaisDecFunMais(
            cloneNode(this._decFuncao_),
            cloneNode(this._decFunMais_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFunmaisDecFunMais(this);
    }

    public PDecFuncao getDecFuncao()
    {
        return this._decFuncao_;
    }

    public void setDecFuncao(PDecFuncao node)
    {
        if(this._decFuncao_ != null)
        {
            this._decFuncao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decFuncao_ = node;
    }

    public PDecFunMais getDecFunMais()
    {
        return this._decFunMais_;
    }

    public void setDecFunMais(PDecFunMais node)
    {
        if(this._decFunMais_ != null)
        {
            this._decFunMais_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decFunMais_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decFuncao_)
            + toString(this._decFunMais_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decFuncao_ == child)
        {
            this._decFuncao_ = null;
            return;
        }

        if(this._decFunMais_ == child)
        {
            this._decFunMais_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._decFuncao_ == oldChild)
        {
            setDecFuncao((PDecFuncao) newChild);
            return;
        }

        if(this._decFunMais_ == oldChild)
        {
            setDecFunMais((PDecFunMais) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
