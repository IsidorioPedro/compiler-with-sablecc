/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AMultiFator extends PFator
{
    private PFator _fator_;
    private TMultiplicacao _multiplicacao_;
    private PExprComparacao _exprComparacao_;

    public AMultiFator()
    {
        // Constructor
    }

    public AMultiFator(
        @SuppressWarnings("hiding") PFator _fator_,
        @SuppressWarnings("hiding") TMultiplicacao _multiplicacao_,
        @SuppressWarnings("hiding") PExprComparacao _exprComparacao_)
    {
        // Constructor
        setFator(_fator_);

        setMultiplicacao(_multiplicacao_);

        setExprComparacao(_exprComparacao_);

    }

    @Override
    public Object clone()
    {
        return new AMultiFator(
            cloneNode(this._fator_),
            cloneNode(this._multiplicacao_),
            cloneNode(this._exprComparacao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiFator(this);
    }

    public PFator getFator()
    {
        return this._fator_;
    }

    public void setFator(PFator node)
    {
        if(this._fator_ != null)
        {
            this._fator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fator_ = node;
    }

    public TMultiplicacao getMultiplicacao()
    {
        return this._multiplicacao_;
    }

    public void setMultiplicacao(TMultiplicacao node)
    {
        if(this._multiplicacao_ != null)
        {
            this._multiplicacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multiplicacao_ = node;
    }

    public PExprComparacao getExprComparacao()
    {
        return this._exprComparacao_;
    }

    public void setExprComparacao(PExprComparacao node)
    {
        if(this._exprComparacao_ != null)
        {
            this._exprComparacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprComparacao_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fator_)
            + toString(this._multiplicacao_)
            + toString(this._exprComparacao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fator_ == child)
        {
            this._fator_ = null;
            return;
        }

        if(this._multiplicacao_ == child)
        {
            this._multiplicacao_ = null;
            return;
        }

        if(this._exprComparacao_ == child)
        {
            this._exprComparacao_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fator_ == oldChild)
        {
            setFator((PFator) newChild);
            return;
        }

        if(this._multiplicacao_ == oldChild)
        {
            setMultiplicacao((TMultiplicacao) newChild);
            return;
        }

        if(this._exprComparacao_ == oldChild)
        {
            setExprComparacao((PExprComparacao) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
