/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AVarmaisDecVarMais extends PDecVarMais
{
    private PDecVariavel _decVariavel_;
    private PDecVarMais _decVarMais_;

    public AVarmaisDecVarMais()
    {
        // Constructor
    }

    public AVarmaisDecVarMais(
        @SuppressWarnings("hiding") PDecVariavel _decVariavel_,
        @SuppressWarnings("hiding") PDecVarMais _decVarMais_)
    {
        // Constructor
        setDecVariavel(_decVariavel_);

        setDecVarMais(_decVarMais_);

    }

    @Override
    public Object clone()
    {
        return new AVarmaisDecVarMais(
            cloneNode(this._decVariavel_),
            cloneNode(this._decVarMais_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarmaisDecVarMais(this);
    }

    public PDecVariavel getDecVariavel()
    {
        return this._decVariavel_;
    }

    public void setDecVariavel(PDecVariavel node)
    {
        if(this._decVariavel_ != null)
        {
            this._decVariavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decVariavel_ = node;
    }

    public PDecVarMais getDecVarMais()
    {
        return this._decVarMais_;
    }

    public void setDecVarMais(PDecVarMais node)
    {
        if(this._decVarMais_ != null)
        {
            this._decVarMais_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decVarMais_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decVariavel_)
            + toString(this._decVarMais_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decVariavel_ == child)
        {
            this._decVariavel_ = null;
            return;
        }

        if(this._decVarMais_ == child)
        {
            this._decVarMais_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._decVariavel_ == oldChild)
        {
            setDecVariavel((PDecVariavel) newChild);
            return;
        }

        if(this._decVarMais_ == oldChild)
        {
            setDecVarMais((PDecVarMais) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
